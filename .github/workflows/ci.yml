name: CI/CD

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
    tags: ["v*"]
    paths-ignore:
      - "**.md"
      - "LICENSE"
      - ".gitignore"
      - ".vscode/**"
      - ".devcontainer/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  pull-requests: write
  security-events: write
  checks: write
  statuses: write
  packages: write

jobs:
  golangci-lint:
    uses: actionsforge/actions-golangci-lint/.github/workflows/golangci-lint.yml@v0

  govulncheck:
    uses: actionsforge/actions-govulncheck/.github/workflows/govulncheck.yml@v0

  test:
    uses: actionsforge/actions-go-test/.github/workflows/go-test.yml@v0
    with:
      test-pattern: "./cmd/server"

  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Check go mod tidy
        run: |
          go mod tidy
          if [ -n "$(git status --porcelain)" ]; then
            echo "‚ùå go.mod or go.sum has uncommitted changes"
            git diff
            exit 1
          fi
          echo "‚úÖ go.mod is clean"

      - name: Build binary
        run: go build -v ./cmd/server

      - name: Install ko
        uses: ko-build/setup-ko@v0.9

      - name: Validate container build
        run: |
          # Test that the container builds successfully (local only)
          ko build --local ./cmd/server
          echo "‚úÖ Container builds successfully"

      - name: Validate multi-platform build
        run: |
          # Test multi-platform build (local only)
          ko build --local --platform=linux/amd64,linux/arm64 ./cmd/server
          echo "‚úÖ Multi-platform build successful"

      - name: Security scan
        run: |
          # Basic security checks
          echo "üîç Checking for common security issues..."

          # Check for hardcoded secrets (basic check)
          if grep -r "password\|secret\|key\|token" cmd/ --exclude="*.go" 2>/dev/null; then
            echo "‚ö†Ô∏è  Potential hardcoded secrets found"
          fi

          # Check for proper error handling
          if ! grep -r "if err != nil" cmd/; then
            echo "‚ö†Ô∏è  Check error handling in code"
          fi

          echo "‚úÖ Basic security checks completed"

      - name: Validation Summary
        run: |
          echo "üéâ All validations passed!"
          echo "‚úÖ Go modules are clean"
          echo "‚úÖ Binary builds successfully"
          echo "‚úÖ Container builds successfully"
          echo "‚úÖ Multi-platform build works"
          echo "‚úÖ Security checks completed"

  build-and-push:
    needs: [validate, golangci-lint, govulncheck, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install ko
        uses: ko-build/setup-ko@v0.9

      - name: Build and push
        env:
          KO_DOCKER_REPO: ghcr.io/platformfuzz/go-hello-service
        run: |
          echo "Current directory: $(pwd)"
          echo "ko.yaml contents:"
          cat ko.yaml

          echo "Building multi-platform image with ko..."
          ko build --base-import-paths ./cmd/server \
            --platform=linux/amd64,linux/arm64 \
            --tags latest
